{
  "stats": {
    "suites": 2,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-07T09:47:24.464Z",
    "end": "2022-05-07T09:49:28.312Z",
    "duration": 20367,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6ce9bcd1-e396-4d35-a492-12cafd03a368",
      "title": "",
      "fullFile": "cypress/integration/features/ui/fleet-admin/signup-scenarios.feature",
      "file": "cypress/integration/features/ui/fleet-admin/signup-scenarios.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "896dda96-3231-49b2-aee6-749e824306ae",
          "title": "Fleet-Admin signup related test cases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "validating error message for invalid email on Sign-up page (example #1)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #1)",
              "timedOut": null,
              "duration": 2785,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5cface04-5504-4e8b-add8-9623ebddf791",
              "parentUUID": "896dda96-3231-49b2-aee6-749e824306ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #2)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #2)",
              "timedOut": null,
              "duration": 1054,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e1b24062-2dba-47ac-954a-02a2fd0737a3",
              "parentUUID": "896dda96-3231-49b2-aee6-749e824306ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #3)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #3)",
              "timedOut": null,
              "duration": 794,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dcb9b448-17cb-4eb9-95fb-f8f503b7a23b",
              "parentUUID": "896dda96-3231-49b2-aee6-749e824306ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #4)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #4)",
              "timedOut": null,
              "duration": 912,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "931b6fbf-de46-4c82-a5da-87c7f32a5b2c",
              "parentUUID": "896dda96-3231-49b2-aee6-749e824306ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #5)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #5)",
              "timedOut": null,
              "duration": 912,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a0ca51cc-2843-410b-bb96-01ca79ad67df",
              "parentUUID": "896dda96-3231-49b2-aee6-749e824306ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #6)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #6)",
              "timedOut": null,
              "duration": 878,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cbddc7ff-9343-4c2e-aa94-1c4e8b0c4687",
              "parentUUID": "896dda96-3231-49b2-aee6-749e824306ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5cface04-5504-4e8b-add8-9623ebddf791",
            "e1b24062-2dba-47ac-954a-02a2fd0737a3",
            "dcb9b448-17cb-4eb9-95fb-f8f503b7a23b",
            "931b6fbf-de46-4c82-a5da-87c7f32a5b2c",
            "a0ca51cc-2843-410b-bb96-01ca79ad67df",
            "cbddc7ff-9343-4c2e-aa94-1c4e8b0c4687"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7335,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7fcc1c44-93c9-4439-822e-303c3210873c",
      "title": "",
      "fullFile": "cypress/integration/features/ui/fleet-admin/user-management-scenarios.feature",
      "file": "cypress/integration/features/ui/fleet-admin/user-management-scenarios.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fa29626e-014d-46e3-97f9-9385c6ee22d9",
          "title": "User management related test cases under fleet admin portal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "View User Administration",
              "fullTitle": "User management related test cases under fleet admin portal View User Administration",
              "timedOut": null,
              "duration": 5821,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b6d91fb2-a1f3-4f20-9c5e-9b8bfec8dee8",
              "parentUUID": "fa29626e-014d-46e3-97f9-9385c6ee22d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Add New User button",
              "fullTitle": "User management related test cases under fleet admin portal Validate Add New User button",
              "timedOut": null,
              "duration": 3503,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "384015cb-3792-4eca-98cd-8855108bd3a9",
              "parentUUID": "fa29626e-014d-46e3-97f9-9385c6ee22d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "View elements in Add New User Page",
              "fullTitle": "User management related test cases under fleet admin portal View elements in Add New User Page",
              "timedOut": null,
              "duration": 3708,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "55c9ef3c-1ce8-4607-bfba-641a23f541c1",
              "parentUUID": "fa29626e-014d-46e3-97f9-9385c6ee22d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b6d91fb2-a1f3-4f20-9c5e-9b8bfec8dee8",
            "384015cb-3792-4eca-98cd-8855108bd3a9",
            "55c9ef3c-1ce8-4607-bfba-641a23f541c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13032,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\report\\.jsons",
        "charts": true,
        "embeddedScreenshots": true,
        "overwrite": false,
        "json": true,
        "html": false
      },
      "version": "6.2.0"
    }
  }
}