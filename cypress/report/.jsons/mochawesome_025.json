{
  "stats": {
    "suites": 1,
    "tests": 17,
    "passes": 17,
    "pending": 0,
    "failures": 0,
    "start": "2022-02-01T11:46:02.859Z",
    "end": "2022-02-01T11:46:46.401Z",
    "duration": 43542,
    "testsRegistered": 17,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9084af1f-b28f-4595-95cb-6ec611aaaf54",
      "title": "",
      "fullFile": "cypress/integration/features/ui/fleet-admin/signup-scenarios.feature",
      "file": "cypress/integration/features/ui/fleet-admin/signup-scenarios.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
          "title": "Fleet-Admin signup related test cases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "validating error message for invalid email on Sign-up page (example #1)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #1)",
              "timedOut": null,
              "duration": 6436,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dac18c50-42ae-475f-8c62-eccb0572ed5c",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #2)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #2)",
              "timedOut": null,
              "duration": 918,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4b540940-5d07-4a69-af76-425e5efc31bd",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #3)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #3)",
              "timedOut": null,
              "duration": 766,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "791488fc-80c5-4481-a62f-dd2393817dd2",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #4)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #4)",
              "timedOut": null,
              "duration": 787,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e616a48a-2493-4443-a24c-5ef94ae8080e",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #5)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #5)",
              "timedOut": null,
              "duration": 800,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4423440b-6625-41db-9e10-8bf62fe9f8ed",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #6)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #6)",
              "timedOut": null,
              "duration": 768,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fb8f056e-8aad-4106-9a17-225b414eb1cd",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for registred email (example #1)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for registred email (example #1)",
              "timedOut": null,
              "duration": 5885,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0f75646a-bd23-4d6c-9037-91b64c6a4d16",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for valid email on Sign-up page",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for valid email on Sign-up page",
              "timedOut": null,
              "duration": 1081,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4ea4d94e-0405-4b43-b01c-334a4d16f6ff",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error messages for password on Sign-up page (example #1)",
              "fullTitle": "Fleet-Admin signup related test cases validating error messages for password on Sign-up page (example #1)",
              "timedOut": null,
              "duration": 567,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7e3d69f1-abc6-41a5-a91f-fb5f015419f3",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error messages for password on Sign-up page (example #2)",
              "fullTitle": "Fleet-Admin signup related test cases validating error messages for password on Sign-up page (example #2)",
              "timedOut": null,
              "duration": 552,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3ff5b565-3494-46e0-b7eb-c2c49b8f309a",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error messages for password on Sign-up page (example #3)",
              "fullTitle": "Fleet-Admin signup related test cases validating error messages for password on Sign-up page (example #3)",
              "timedOut": null,
              "duration": 611,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f08e69e3-9f3e-4c83-a4cf-578b8743a722",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error messages for password on Sign-up page (example #4)",
              "fullTitle": "Fleet-Admin signup related test cases validating error messages for password on Sign-up page (example #4)",
              "timedOut": null,
              "duration": 566,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fca035d6-23ee-4d95-9247-886982f127bc",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error messages for password on Sign-up page (example #5)",
              "fullTitle": "Fleet-Admin signup related test cases validating error messages for password on Sign-up page (example #5)",
              "timedOut": null,
              "duration": 680,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e5d9dd08-4830-499c-b16d-8a5991fa0c78",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error messages for password on Sign-up page (example #6)",
              "fullTitle": "Fleet-Admin signup related test cases validating error messages for password on Sign-up page (example #6)",
              "timedOut": null,
              "duration": 542,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7cc0f384-f6e7-4cb4-8e71-a337187b68c8",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error messages for password on Sign-up page (example #7)",
              "fullTitle": "Fleet-Admin signup related test cases validating error messages for password on Sign-up page (example #7)",
              "timedOut": null,
              "duration": 703,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3efc1a0e-6b96-475e-86a2-89d9be15449f",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error messages for password on Sign-up page (example #8)",
              "fullTitle": "Fleet-Admin signup related test cases validating error messages for password on Sign-up page (example #8)",
              "timedOut": null,
              "duration": 661,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "33296b4c-37c8-4fe9-9ccd-b80a637a51fe",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Operator sign up for Bussr",
              "fullTitle": "Fleet-Admin signup related test cases Operator sign up for Bussr",
              "timedOut": null,
              "duration": 16424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4b3a8bba-256c-4281-893a-07cc7556db1b",
              "parentUUID": "a34c974a-a7fa-4d66-9ca4-939e40bc63c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dac18c50-42ae-475f-8c62-eccb0572ed5c",
            "4b540940-5d07-4a69-af76-425e5efc31bd",
            "791488fc-80c5-4481-a62f-dd2393817dd2",
            "e616a48a-2493-4443-a24c-5ef94ae8080e",
            "4423440b-6625-41db-9e10-8bf62fe9f8ed",
            "fb8f056e-8aad-4106-9a17-225b414eb1cd",
            "0f75646a-bd23-4d6c-9037-91b64c6a4d16",
            "4ea4d94e-0405-4b43-b01c-334a4d16f6ff",
            "7e3d69f1-abc6-41a5-a91f-fb5f015419f3",
            "3ff5b565-3494-46e0-b7eb-c2c49b8f309a",
            "f08e69e3-9f3e-4c83-a4cf-578b8743a722",
            "fca035d6-23ee-4d95-9247-886982f127bc",
            "e5d9dd08-4830-499c-b16d-8a5991fa0c78",
            "7cc0f384-f6e7-4cb4-8e71-a337187b68c8",
            "3efc1a0e-6b96-475e-86a2-89d9be15449f",
            "33296b4c-37c8-4fe9-9ccd-b80a637a51fe",
            "4b3a8bba-256c-4281-893a-07cc7556db1b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 38747,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\report\\.jsons",
        "charts": true,
        "reportPageTitle": "custom-title",
        "embeddedScreenshots": true,
        "overwrite": false,
        "json": true,
        "html": false
      },
      "version": "5.2.0"
    }
  }
}